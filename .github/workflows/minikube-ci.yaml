# .github/workflows/ci-cd.yaml
name: CI â†’ Build Docker Image and Push to Docker Hub

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allows manual trigger of the workflow

jobs:
  build-and-push-image:
    name: Build, Test, and Push to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      contents: read # To checkout the repository code
      id-token: write # Not strictly needed for Docker Hub push, but good practice for AWS-related future steps

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and run tests
        run: mvn clean install -DskipDockerBuild # Skip Docker build if your Maven build has a Docker plugin

      - name: Set Docker Image Tag and Save to File
        id: set_image_tag
        run: |
          # Use short SHA for a unique, immutable tag
          IMAGE_TAG="${{ github.sha }}"
          echo "Generated Image Tag: $IMAGE_TAG"
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT # Set as output for this job
          echo "$IMAGE_TAG" > image-tag.txt # Save to a file for artifact upload

      - name: Log in to Docker Hub
        uses: docker/login-action@v3 # Use the official Docker login action
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # GitHub Secret for Docker Hub username
          password: ${{ secrets.DOCKER_PASSWORD }} # GitHub Secret for Docker Hub password

      - name: Get Docker Hub Repository Name
        id: get-dockerhub-repo
        run: |
          # The full image name will be like: <DOCKER_USERNAME>/github-gists-api
          # Replace 'github-gists-api' with your desired image name on Docker Hub
          DOCKER_IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/github-gists-api"
          echo "DOCKER_IMAGE_NAME=$DOCKER_IMAGE_NAME" >> $GITHUB_ENV # Set as environment variable

      - name: Build and Tag Docker Image for Docker Hub
        run: |
          docker build -t "${{ env.DOCKER_IMAGE_NAME }}:${{ steps.set_image_tag.outputs.image_tag }}" .
          # Optionally, also tag as latest
          docker tag "${{ env.DOCKER_IMAGE_NAME }}:${{ steps.set_image_tag.outputs.image_tag }}" "${{ env.DOCKER_IMAGE_NAME }}:latest"

      - name: Push Docker Image to Docker Hub
        run: |
          docker push "${{ env.DOCKER_IMAGE_NAME }}:${{ steps.set_image_tag.outputs.image_tag }}"
          docker push "${{ env.DOCKER_IMAGE_NAME }}:latest" # Push latest tag as well

      - name: Upload image tag artifact (for local deployment reference)
        uses: actions/upload-artifact@v4
        with:
          name: latest-image-tag
          path: image-tag.txt
