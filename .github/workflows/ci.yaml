name: CI -> Build, Test, and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and run tests
        run: mvn clean install -DskipDockerBuild

      - name: Set Docker Image Tag
        id: set_image_tag
        run: |
          IMAGE_TAG="${{ github.sha }}"
          echo "Generated Image Tag: $IMAGE_TAG"
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "$IMAGE_TAG" > image-tag.txt

      - name: Configure AWS credentials for ECR
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ vars.ACTIONS_ECR_PUSH_ROLE_NAME }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Get ECR repository URL
        id: get-ecr-url-ci
        run: |
          ECR_REPO_URL=$(aws ecr describe-repositories \
            --repository-names simple-gists-api-gists-api \
            --query 'repositories[0].repositoryUri' --output text)
          echo "ECR_REPO_URL=$ECR_REPO_URL" >> $GITHUB_ENV

      - name: Build and Tag Docker Image
        run: |
          docker build -t "${{ env.ECR_REPO_URL }}:${{ steps.set_image_tag.outputs.image_tag }}" .
          docker tag "${{ env.ECR_REPO_URL }}:${{ steps.set_image_tag.outputs.image_tag }}" "${{ env.ECR_REPO_URL }}:latest"

      - name: Push Docker Image to ECR
        run: |
          docker push "${{ env.ECR_REPO_URL }}:${{ steps.set_image_tag.outputs.image_tag }}"
          docker push "${{ env.ECR_REPO_URL }}:latest"

      - name: Upload image tag artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-tag-artifact
          path: image-tag.txt
