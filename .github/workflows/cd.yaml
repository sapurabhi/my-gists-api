name: CD -> Deploy to EKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    permissions:
      id-token: write   # For OIDC authentication with AWS
      contents: read     # To checkout the repo and download artifacts

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download image tag artifact
        uses: actions/download-artifact@v4
        with:
          name: image-tag-artifact
          path: ./image-tag-artifact

      - name: Read image tag from file
        id: read_tag
        run: |
          IMAGE_TAG=$(cat ./image-tag-artifact/image-tag.txt)
          echo "Retrieved IMAGE_TAG for deployment: $IMAGE_TAG"
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ vars.ACTIONS_DEPLOYER_ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up kubectl for EKS
        uses: aws-actions/amazon-eks-setup-kubectl@v1
        with:
          cluster-name: ${{ vars.EKS_CLUSTER_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.14.0'

      - name: Get ECR repository URL for deployment
        id: get-ecr-url-cd
        run: |
          ECR_REPO_URL=$(aws ecr describe-repositories --repository-names simple-gists-api-gists-api --query 'repositories[0].repositoryUri' --output text)
          echo "ECR_REPO_URL=$ECR_REPO_URL" >> $GITHUB_ENV

      - name: Deploy to EKS with Helm
        env:
          ECR_REPO_URL: ${{ env.ECR_REPO_URL }}
          IMAGE_TAG: ${{ steps.read_tag.outputs.image_tag }}
        run: |
          echo "Deploying to EKS with image: $ECR_REPO_URL:$IMAGE_TAG"
          helm upgrade --install simple-gists-api-release ./helm/simple-gists-api \
            --namespace default \
            --create-namespace \
            --values helm/simple-gists-api/values-prod.yaml \
            --set image.repository=$ECR_REPO_URL \
            --set image.tag=$IMAGE_TAG \
            --atomic

      - name: Wait for LoadBalancer IP/Hostname
        id: lb_status
        run: |
          echo "Waiting for LoadBalancer..."
          for i in $(seq 1 120); do
            LB_HOSTNAME=$(kubectl get svc simple-gists-api-release -n default -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
            if [ -n "$LB_HOSTNAME" ]; then
              echo "LoadBalancer Hostname: $LB_HOSTNAME"
              echo "lb_url=$LB_HOSTNAME" >> $GITHUB_OUTPUT
              break
            fi
            echo "Waiting... ($i/120)"
            sleep 5
          done

      - name: Verify deployment
        run: |
          if [ -n "${{ steps.lb_status.outputs.lb_url }}" ]; then
            echo "Checking application health at: http://${{ steps.lb_status.outputs.lb_url }}/health"
            curl --fail --retry 10 --retry-delay 5 http://${{ steps.lb_status.outputs.lb_url }}/health
          else
            echo "LoadBalancer URL not available."
            exit 1
          fi
